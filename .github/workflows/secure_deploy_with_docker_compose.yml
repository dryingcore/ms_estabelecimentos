name: Secure Deploy with Docker Compose

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known_hosts
        run: |
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          ssh-keyscan -H 116.203.23.255 >> ~/.ssh/known_hosts

      - name: Deploy microservice estabelecimentos
        run: |
          ssh root@116.203.23.255 << 'EOF'
          set -e

          REPO_PATH="/home/dryingcore/applications/ms_estabelecimentos"

          if [ ! -d "$REPO_PATH" ]; then
            echo "Clonando o repositório..."
            git clone git@github.com:dryingcore/ms_estabelecimentos.git "$REPO_PATH"
          else
            echo "Atualizando o repositório existente..."
            cd "$REPO_PATH"
            git reset --hard
            git pull origin main
          fi

          cd "$REPO_PATH"

          # Remove apenas o container do app, sem afetar o MySQL
          docker compose rm -f app

          # Sobe o app e os serviços dependentes (incluindo o MySQL)
          docker compose up -d --build app

          # Limpa imagens antigas para evitar conflitos
          docker image prune -f
          EOF
